# -*- CPERL -*-
# /=====================================================================\ #
# | pgf.sty                                                             | #
# | Implementation for LaTeXML                                          | #
# |=====================================================================| #
# | Part of LaTeXML:                                                    | #
# |  Public domain software, produced as part of work done by the       | #
# |  United States Government & not subject to copyright in the US.     | #
# |---------------------------------------------------------------------| #
# | Thanks to Kim Philipp Jablonski <kpjkpjkpjkpjkpjkpj@gmail.com>      | #
# | of the arXMLiv group for initial implementation                     | #
# |    http://arxmliv.kwarc.info/                                       | #
# | Released under the Gnu Public License                               | #
# | Released to the Public Domain                                       | #
# |---------------------------------------------------------------------| #
# | Bruce Miller <bruce.miller@nist.gov>                        #_#     | #
# | http://dlmf.nist.gov/LaTeXML/                              (o o)    | #
# \=========================================================ooo==U==ooo=/ #

package LaTeXML::Package::Pool;
use strict;
use warnings;
use LaTeXML::Package;

InputDefinitions('pgfmathfunctions.basic.code', type => 'tex', noltxml => 1);

######################################################

# \pgfmath@returnone: defines \pgfmathresult
# \pgfmath@namedef -> \expandafter\def\csname#1\endcsname

# {function name}{arity}{code}
# pgfmath@function@<function name>
# pgfmath@operation@#1@type
# pgfmath@operation@#1@arity
# pgfmath@operation@#1@infix
# pgfmath@operation@#1@precedence

sub num {
  return ToString($_[0]);
}

DefMacroI('\pgfmathneg', '{}', sub {
    my ($gullet, $n) = @_;
    DefMacro('\pgfmathresult', -num($n)); });

DefMacroI('\pgfmathadd', '{}{}', sub {
    my ($gullet, $n1, $n2) = @_;
    DefMacro('\pgfmathresult', num($n1) + num($n2)); });

######################################################

1;

# vim: ft=perl: noexpandtab:
