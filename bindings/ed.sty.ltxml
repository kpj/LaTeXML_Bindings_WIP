# -*- CPERL -*-
# /=====================================================================\ #
# | ed.sty                                                              | #
# | Implementation for LaTeXML                                          | #
# |=====================================================================| #
# | Part of LaTeXML:                                                    | #
# |  Public domain software, produced as part of work done by the       | #
# |  United States Government & not subject to copyright in the US.     | #
# |---------------------------------------------------------------------| #
# | Thanks to Lukas Kohlhase <kohliderzweite@gmail.com>                 | #
# | of the arXMLiv group for initial implementation                     | #
# |    http://arxmliv.kwarc.info/                                       | #
# | Released under the Gnu Public License                               | #
# | Released to the Public Domain                                       | #
# |---------------------------------------------------------------------| #
# | Bruce Miller <bruce.miller@nist.gov>                        #_#     | #
# | http://dlmf.nist.gov/LaTeXML/                              (o o)    | #
# \=========================================================ooo==U==ooo=/ #

package LaTeXML::Package::Pool;
use strict;
use warnings;
use LaTeXML::Package;

######################################################

DeclareOption('show','\showednotestrue');
DeclareOption('hide','\showednotesfalse');
DeclareOption('draft','\showednotestrue');
DeclareOption('final','\showednotesfalse');

RawTeX('\newif\ifshowednotes\showednotesfalse');
ProcessOptions();

 RequirePackage('paralist');
 RequirePackage('xcolor');


  DefConstructor('\tweak{}',"<ltx:note role='tweak'>#1</ltx:note>");
   
  DefMacroI('\begin{todolist}', '{}',  "\\begin{Lukasidentifier}#1\\begin{enumerate}");
  DefMacroI('\end{todolist}',   undef, '\end{enumerate}\end{Lukasidentifier}');

  DefEnvironment('{Lukasidentifier}',"
  <ltx:note role='todolist'> #body </ltx:note><ltx:note role='todomark'>ToDo </ltx:note>");
 
  
  DefEnvironment('{Newpart}{}',"<ltx:note role='newpart'>#body</ltx:note><ltx:note role='newparttitle'>#1</ltx:note>");
  
  DefEnvironment('{Oldpart}{}',"<ltx:note role='oldpart'>#body</ltx:note><ltx:note role='oldparttitle'>#1</ltx:note>");
  
  
  RawTeX('
  \newcommand\edexplanation{\todolist{we will use the ednote system to communicate}
\item use the {\tt{\char92ednote\char123author: some explanatory text\char125}}
  like a footnote to say what you have done or what should still be
  done\ednote{MiKo: this is an example of an ednote}. Ednotes are numbered and
  marked in the margin for easy recognition.
\item use the {\tt{\char92issue\char123author: explanation of the
      issue\char125}} variant of ednote for issues\issue{this is an example of
    an issue} that still have to be discussed.
\item finally, the {\tt{todolist}} environment is a list environment that can be
  used to mark up todo lists. This explanation is an example of a todo list, it
  is inserted into the text in a different font.
\item the {\tt{newpart}} environment can be used to mark up changed text blocks.
  {\tt{\char92begin\char123newpart\char125}} takes an argument that is
  interpreted as a comment and is treated like an {\tt{\char92ednote}} comment.
\item the {\tt{oldpart}} environment is similar to {\tt{newpart}} but is used
  for old parts of text copied from another document that still need to be
  changed in a document.
\item putting the macro {\tt{\char92ednotemessage}} just before the
  {\tt{char92end\char123document\char125}} will generate a message with
  cardinality information for the ednotes into the log file.
\item all of these text decorations and meta-annotations are only inserted into
  the text, if the {\tt{show}} package option in the {\tt{\char92 usepackage}}
  directive in the preamble of the document is set: {\tt{\char92
      usepackage[show]\char123ed\char125}} will show the decorations, while
  {\tt{\char92 usepackage\char123ed\char125}} will not. This is useful for
  preparing clean version for outside consumption without losing the
  management metadata.
'); #Documentation generated by the package itself


NewCounter('ednote');

DefMacro('\ednote','\ifshowednotes\lx@show@ednote\else\lx@hide@ednote\fi'); 

DefConstructor('\lx@show@ednote{}',
  "<ltx:note role='ednote' mark='#refnum'>#label: #1  </ltx:note><ltx:note role='ednotemark' mark='#margin:#refnum'/>",
  properties => sub {
    RefStepCounter('ednote'),
    margin=>LookupValue('ednotemargin'), 
    label=>LookupValue('ednotelabel') });
DefConstructor('\lx@hide@ednote{}','');
   
DefMacro('\Ednote','\ifshowednotes\lx@show@Ednote\else\lx@hide@Ednote\fi');  
    DefConstructor('\lx@show@Ednote{}',							#This is the same as \ednote, except there is no mark in the margins.
  "<ltx:note role='ednote' mark='#refnum'>#label: #1  </ltx:note>",
  properties => sub {
    RefStepCounter('ednote'), 
    label=>LookupValue('ednotelabel') });
    
    DefConstructor('\lx@hide@Ednote{}','');
    
    
   AssignValue('ednotemargin'=>'EdN'); #Giving a default value to ednotemargin
   AssignValue('ednotelabel'=>'EdNote'); #Giving a default value to ednotelabel. 
   
   DefMacro('\ednotemargin{}',sub {
   my ($gullet,$newmargin)=@_;
   $newmargin=ToString($newmargin);
   AssignValue('ednotemargin'=>$newmargin);});
   
   DefMacro('\ednotelabel{}',sub {
   my ($gullet,$newlabel)=@_;
   $newlabel=ToString($newlabel);
   AssignValue('ednotelabel'=>$newlabel);});
   
   
   DefConstructor('\issue{}',
  "<ltx:note role='issue' mark='#refnum'>#label: #1  </ltx:note><ltx:note role='issuemark' mark='#margin:#refnum'/>",
  properties => sub {
    RefStepCounter('ednote'),
    margin=>LookupValue('issuemargin'), 
    label=>LookupValue('issuelabel') });
    
    DefConstructor('\Issue{}',							#This is the same as \issue, except there is no mark in the margins.
  "<ltx:note role='issue' mark='#refnum'>#label: #1  </ltx:note>",
  properties => sub {
    RefStepCounter('ednote'), 
    label=>LookupValue('issuelabel') });
   
    
   AssignValue('issuemargin'=>'Is'); #Giving a default value to issuemargin
   AssignValue('issuelabel'=>'Issue'); #Giving a default value to issuelabel. 
   
   DefMacro('\edissuemargin{}',sub {
   my ($gullet,$newmargin)=@_;
   $newmargin=ToString($newmargin);
   AssignValue('issuemargin'=>$newmargin);});
   
   DefMacro('\edissuelabel{}',sub {
   my ($gullet,$newlabel)=@_;
   $newlabel=ToString($newlabel);
   AssignValue('issuelabel'=>$newlabel);});
   
      DefConstructor('\todo{}',
  "<ltx:note role='todo' mark='#refnum'>#label: #1  </ltx:note><ltx:note role='todomark' mark='#margin:#refnum'/>",
  properties => sub {
    RefStepCounter('ednote'),
    margin=>LookupValue('todomargin'), 
    label=>LookupValue('todolabel') });
    
   
    
   AssignValue('todomargin'=>'ToDo'); #Giving a default value to todomargin
   AssignValue('todolabel'=>'To Do'); #Giving a default value to todolabel. 
   
   #I can't  really find a way for the user to modify the label and margin, as for issues and ednotes.
   
      DefConstructor('\tweak{}',
  "<ltx:note role='tweak' mark='#refnum'>#label: #1  </ltx:note><ltx:note role='tweakmark' mark='#margin:#refnum'/>",
  properties => sub {
    RefStepCounter('ednote'),
    margin=>LookupValue('tweakmargin'), 
    label=>LookupValue('tweaklabel') });
    
    DefConstructor('\Issue{}',							#This is the same as \issue, except there is no mark in the margins.
  "<ltx:note role='tweak' mark='#refnum'>#label: #1  </ltx:note>",
  properties => sub {
    RefStepCounter('ednote'), 
    label=>LookupValue('tweaklabel') });
   
    
   AssignValue('tweakmargin'=>'Tw'); #Giving a default value to ednotemargin
   AssignValue('tweaklabel'=>'Tweak'); #Giving a default value to ednotelabel. 
   
   DefMacro('\tweakmargin{}',sub {
   my ($gullet,$newmargin)=@_;
   $newmargin=ToString($newmargin);
   AssignValue('tweakmargin'=>$newmargin);});
   
   DefMacro('\tweaklabel{}',sub {
   my ($gullet,$newlabel)=@_;
   $newlabel=ToString($newlabel);
   AssignValue('tweaklabel'=>$newlabel);});

  DefEnvironment('{musings}{}',"<ltx:note role='musings'>#body</ltx:note><ltx:note role='musingstitle'>#1</ltx:note>");
  
  DefMacro('\edissue{}','\issue{#1}');				#I am rawtexing all the edstub stuff, since it isn't semantically interesting
  
  RawTeX('\def\ed@stubURI{random}
\newcommand\edstuURI[1]{\gdef\ed@stubURI{#1}}'); 					
  RawTeX(' \newif\ifhref\hreffalse
  \newenvironment{edstub}[2][]
{\def\@test{#1}\begin{center}\huge\color{red}
\ifx\@test\@empty The following blue text \else #1 \fi is only a provisional stub\\ \Large
the Office document
\ifx\ed@stubURI\@empty{#2}\else\ifhref\href{\ed@stubURI}{#2}\else{#2}\fi\fi\
contains more text\\ which will be merged for the final document
  \end{center}\color{blue}}
{}');
######################################################

1;

