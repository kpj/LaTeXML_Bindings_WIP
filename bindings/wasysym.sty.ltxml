# -*- CPERL -*-
# /=====================================================================\ #
# | wasysym.sty                                                         | #
# | Implementation for LaTeXML                                          | #
# |=====================================================================| #
# | Part of LaTeXML:                                                    | #
# |  Public domain software, produced as part of work done by the       | #
# |  United States Government & not subject to copyright in the US.     | #
# |---------------------------------------------------------------------| #
# | Thanks to Kim Philipp Jablonski <kpjkpjkpjkpjkpjkpj@gmail.com>      | #
# | of the arXMLiv group for initial implementation                     | #
# |    http://arxmliv.kwarc.info/                                       | #
# | Released under the Gnu Public License                               | #
# | Released to the Public Domain                                       | #
# |---------------------------------------------------------------------| #
# | Bruce Miller <bruce.miller@nist.gov>                        #_#     | #
# | http://dlmf.nist.gov/LaTeXML/                              (o o)    | #
# \=========================================================ooo==U==ooo=/ #

package LaTeXML::Package::Pool;
use strict;
use warnings;
use LaTeXML::Package;

######################################################

#############
# Parse XML #
#############

my $wasysym_path = pathname_find('wasyb10.xml', types => ['*'],
  paths => [LookupValue('SEARCHPATHS')], installation_subdir => 'resources/SVGFonts');
my $wasysym_xmlparser = LaTeXML::Common::XML::Parser->new();
my $wasysym_fontdoc   = $wasysym_xmlparser->parseFile($wasysym_path);

my $wasysym_xpath = LaTeXML::Common::XML::XPath->new();
$wasysym_xpath->registerNS(svg => 'http://www.w3.org/2000/svg');

####################
# Helper functions #
####################

sub getSVGGlyph {
  my ($font, $codepoint) = @_;
  my $fontobject = LookupValue('SVGFont:' . $font);
  if (!$fontobject) {
    my $nlist = $wasysym_xpath->findnodes('/font/glyph', $wasysym_fontdoc);
    foreach my $node ($nlist->get_nodelist) {
      $$fontobject{ $node->getAttribute("index") } = $node->firstChild; }
    AssignValue('SVGFont:' . $font => $fontobject); }

  if (!exists $$fontobject{$codepoint}) {
    Error("Codepoint " . $codepoint . " not in " . $font);
    return; }

  my $node = $$fontobject{$codepoint};

  # handle node attributes (TODO: do this properly)
  $node->removeAttribute('viewBox');
  $node->setAttribute('width',  '10px');
  $node->setAttribute('height', '14px');

  return $node; }

###########
# Symbols #
###########

print "\n\n" . getSVGGlyph('wasyb10', 69)->toString . "\n\n\n";

DefMathI('\Join',       undef, "\x{2a1d}");
DefMathI('\Box',        undef, "\x{25a1}");
DefMathI('\Diamond',    undef, "\x{25c7}");
DefMathI('\leadsto',    undef, "\x{2933}");
DefMathI('\sqsubset',   undef, "\x{228f}");
DefMathI('\sqsupset',   undef, "\x{2290}");
DefMathI('\lhd',        undef, "\x{22B2}");
DefMathI('\unlhd',      undef, "\x{22B4}");
DefMathI('\LHD',        undef, "\x{25C0}");
DefMathI('\rhd',        undef, "\x{22B3}");
DefMathI('\unrhd',      undef, "\x{22B5}");
DefMathI('\RHD',        undef, "\x{25B6}");
DefMathI('\apprle',     undef, "\x{2272}");
DefMathI('\apprge',     undef, "\x{2273}");
DefMathI('\wasypropto', undef, "\x{221d}");
DefMathI('\invneg',     undef, "\x{2310}");
DefMathI('\ocircle',    undef, "\x{25cb}");
DefMathI('\logof',      undef, "\x{229b}");

Let('\varint',  '\int');
Let('\varoint', '\oint');
DefMathI('\iint', undef, "\x{222C}", meaning => 'double-integral', role => 'INTOP',
  mathstyle => \&doVariablesizeOp);
DefMathI('\iiint', undef, "\x{222D}", meaning => 'triple-integral', role => 'INTOP',
  mathstyle => \&doVariablesizeOp);
DefMathI('\oiint', undef, "\x{222F}", meaning => 'surface-integral', role => 'INTOP',
  mathstyle => \&doVariablesizeOp);

DefPrimitiveI('\male',        undef, "\x{2642}");
DefPrimitiveI('\female',      undef, "\x{2640}");
DefPrimitiveI('\currency',    undef, UTF(0xA4));
DefPrimitiveI('\phone',       undef, "\x{260E}");
DefPrimitiveI('\recorder',    undef, "\x{2315}");
DefPrimitiveI('\clock',       undef, "\x{231A}");    # or 1F552
DefPrimitiveI('\lightning',   undef, "\x{2607}");
DefPrimitiveI('\pointer',     undef, "\x{261E}");
DefPrimitiveI('\RIGHTarrow',  undef, "\x{25B6}");
DefPrimitiveI('\LEFTarrow',   undef, "\x{25C0}");
DefPrimitiveI('\UParrow',     undef, "\x{25B2}");
DefPrimitiveI('\DOWNarrow',   undef, "\x{25BC}");
DefPrimitiveI('\diameter',    undef, "\x{2300}");
DefPrimitiveI('\invdiameter', undef, "\x{29B0}");    # reversed empty set
DefPrimitiveI('\varangle',    undef, "\x{2222}");
DefPrimitiveI('\wasylozenge', undef, "\x{2311}");
DefPrimitiveI('\kreuz',       undef, "\x{2720}");
DefPrimitiveI('\smiley',      undef, "\x{263A}");
DefPrimitiveI('\frownie',     undef, "\x{2639}");
DefPrimitiveI('\blacksmiley', undef, "\x{263B}");
DefPrimitiveI('\sun',         undef, "\x{263C}");
DefPrimitiveI('\checked',     undef, "\x{2713}");
DefPrimitiveI('\bell',        undef, "\x{237E}");
#DefPrimitiveI('\ataribox', undef, "\x{}");
DefConstructor('\ataribox',
  '<svg:svg version="1.1" height="14px" width="10px">' .
    '<svg:g fill="currentColor" transform="scale(0.018)">' .
'<svg:path d="M78 375l197 298l197 -298l-197 -298zM28 297l197 -297h-197v297zM28 750h197l-197 -298v298zM522 750v-298l-197 298h197zM522 0h-197l197 297v-297z" />' .
    '</svg:g>' .
    '</svg:svg>');
DefPrimitiveI('\cent',          undef, UTF(0xA2));
DefPrimitiveI('\permil',        undef, "\x{2030}");
DefPrimitiveI('\brokenvert',    undef, UTF(0xA6));
DefPrimitiveI('\wasytherefore', undef, "\x{2234}");
DefPrimitiveI('\Bowtie',        undef, "\x{22c8}");
DefPrimitiveI('\agemO',         undef, "\x{2127}");

DefPrimitiveI('\AC',  undef, "\x{223c}");    # don't use math symbol here
DefPrimitiveI('\HF',  undef, "\x{2248}");    # don't use math symbol here
DefPrimitiveI('\VHF', undef, "\x{224b}");    # don't use math symbol here
                                             #DefPrimitiveI('\photon', undef, "\x{}");
                                             #DefPrimitiveI('\gluon', undef, "\x{}");

DefPrimitiveI('\Square',     undef, "\x{25A1}");
DefPrimitiveI('\XBox',       undef, "\x{2327}");
DefPrimitiveI('\CheckedBox', undef, "\x{2611}");
#DefPrimitiveI('\hexagon', undef, "\x{}");
DefPrimitiveI('\varhexagon', undef, "\x{2B21}");
DefPrimitiveI('\pentagon',   undef, "\x{2B20}");
#DefPrimitiveI('\octagon', undef, "\x{}");
DefPrimitiveI('\hexstar', undef, "\x{26b9}");
#DefPrimitiveI('\varhexstar', undef, "\x{}");
DefPrimitiveI('\davidsstar', undef, "\x{2721}");

DefPrimitiveI('\eighthnote',  undef, "\x{1D160}");
DefPrimitiveI('\quarternote', undef, "\x{1D15F}");
DefPrimitiveI('\halfnote',    undef, "\x{1D15E}");
DefPrimitiveI('\fullnote',    undef, "\x{1D15D}");
DefPrimitiveI('\twonotes',    undef, "\x{266B}");

DefPrimitiveI('\Circle', undef, "\x{25CB}");
DefPrimitiveI('\CIRCLE', undef, "\x{25CF}");
#DefPrimitiveI('\Leftcircle', undef, "\x{}");
DefPrimitiveI('\LEFTCIRCLE', undef, "\x{25D6}");
#DefPrimitiveI('\Rightcircle', undef, "\x{}");
DefPrimitiveI('\RIGHTCIRCLE', undef, "\x{25D7}");
DefPrimitiveI('\LEFTcircle',  undef, "\x{25D0}");
DefPrimitiveI('\RIGHTcircle', undef, "\x{25D1}");
DefPrimitiveI('\leftturn',    undef, "\x{21BA}");
DefPrimitiveI('\rightturn',   undef, "\x{21BB}");

DefPrimitiveI('\dh',    undef, UTF(0xf0));
DefPrimitiveI('\DH',    undef, UTF(0xd0));
DefPrimitiveI('\thorn', undef, UTF(0xfe));
DefPrimitiveI('\Thorn', undef, UTF(0xde));
DefPrimitiveI('\openo', undef, "\x{0254}");
DefPrimitiveI('\inve',  undef, "\x{01dd}");

DefPrimitiveI('\vernal',    undef, "\x{2648}");
DefPrimitiveI('\ascnode',   undef, "\x{260A}");
DefPrimitiveI('\descnode',  undef, "\x{260B}");
DefPrimitiveI('\fullmoon',  undef, "\x{1F315}");
DefPrimitiveI('\newmoon',   undef, "\x{1F311}");
DefPrimitiveI('\leftmoon',  undef, "\x{263E}");
DefPrimitiveI('\rightmoon', undef, "\x{263D}");
DefPrimitiveI('\astrosun',  undef, "\x{2609}");
DefPrimitiveI('\mercury',   undef, "\x{263F}");
DefPrimitiveI('\venus',     undef, "\x{2640}");
DefPrimitiveI('\earth',     undef, "\x{2641}");
DefPrimitiveI('\mars',      undef, "\x{2642}");
DefPrimitiveI('\jupiter',   undef, "\x{2643}");
DefPrimitiveI('\saturn',    undef, "\x{2644}");
DefPrimitiveI('\uranus',    undef, "\x{26E2}");
DefPrimitiveI('\neptune',   undef, "\x{2646}");
DefPrimitiveI('\pluto',     undef, "\x{2647}");

DefPrimitiveI('\aries',       undef, "\x{2648}");
DefPrimitiveI('\taurus',      undef, "\x{2649}");
DefPrimitiveI('\gemini',      undef, "\x{264A}");
DefPrimitiveI('\cancer',      undef, "\x{264B}");
DefPrimitiveI('\leo',         undef, "\x{264C}");
DefPrimitiveI('\virgo',       undef, "\x{264D}");
DefPrimitiveI('\libra',       undef, "\x{264E}");
DefPrimitiveI('\scorpio',     undef, "\x{264F}");
DefPrimitiveI('\sagittarius', undef, "\x{2650}");
DefPrimitiveI('\capricornus', undef, "\x{2651}");
DefPrimitiveI('\aquarius',    undef, "\x{2652}");
DefPrimitiveI('\pisces',      undef, "\x{2653}");
DefPrimitiveI('\conjunction', undef, "\x{260C}");
DefPrimitiveI('\opposition',  undef, "\x{260D}");

DefConstructor('\APLstar', sub {
    my ($document) = @_;
    $document->appendTree($document->getNode, getSVGGlyph('wasyb10', 69)); });
DefPrimitiveI('\APLlog',   undef, "\x{235F}");
DefPrimitiveI('\APLbox',   undef, "\x{2395}");
DefPrimitiveI('\APLup',    undef, "\x{234B}");
DefPrimitiveI('\APLdown',  undef, "\x{2352}");
DefPrimitiveI('\APLinput', undef, "\x{235e}");
#DefPrimitiveI('\APLcomment', undef, "\x{}");
DefPrimitiveI('\APLinv',           undef, "\x{2339}");
DefPrimitiveI('\APLuparrowbox',    undef, "\x{2350}");
DefPrimitiveI('\APLdownarrowbox',  undef, "\x{2357}");
DefPrimitiveI('\APLleftarrowbox',  undef, "\x{2347}");
DefPrimitiveI('\APLrightarrowbox', undef, "\x{2348}");
DefPrimitiveI('\notbackslash',     undef, "\x{2340}");
DefPrimitiveI('\notslash',         undef, "\x{233F}");

DefMacroI('\APLnot', '{}', '#1\wasysym@APLnot');
DefPrimitiveI('\wasysym@APLnot', undef, "\x{0334}");
#DefPrimitiveI('\APLvert', '{}', "\x{}");
#DefPrimitiveI('\APLcirc', '{}', "\x{}");
#DefPrimitiveI('\APLminus', undef, "\x{}");

######################################################

1;

# vim: ft=perl: noexpandtab:
